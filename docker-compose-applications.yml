services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 9091:9091
      - 21882:21882/tcp
      - 21882:21882/udp
    volumes:
      - ${HDD}/applications/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - TZ=${TZ}
      - SERVER_COUNTRIES=Japan
      - FIREWALL_VPN_INPUT_PORTS=21882

  transmission:
    image: ghcr.io/linuxserver/transmission:4.0.5
    container_name: transmission
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - USER=${USERNAME}
      - PASS=${PASSWORD}
    volumes:
      - ${HDD}/applications/transmission:/config
      - ${HDD}/downloads:/downloads
      - ${HDD}/downloads/torrent-blackhole:/watch
    restart: unless-stopped

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - NZBGET_USER=${USERNAME}
      - NZBGET_PASS=${PASSWORD}
    volumes:
      - ${HDD}/applications/nzbget:/config
      - ${HDD}/downloads:/downloads
    ports:
      - 6789:6789
    restart: unless-stopped

  homer:
    build:
      context: ./homer/
      dockerfile: ./Dockerfile
      #To build from source, comment previous line and uncomment below
      #build: .
    container_name: homer
    volumes:
      - /home/edward/home_server/homer/public/assets:/www/assets
    ports:
      - 8080:8080
    environment:
      - UID=${PUID}
      - GID=${PGID}
    restart: unless-stopped

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    ports:
      - "8191:8191"
    restart: unless-stopped

  homeassistant:
    image: lscr.io/linuxserver/homeassistant:latest
    container_name: homeassistant
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HDD}/applications/home_assistant:/config
      - /run/dbus:/run/dbus:ro
    ports:
      - 8123:8123
    restart: unless-stopped

  esphome:
    image: ghcr.io/esphome/esphome:latest
    container_name: esphome
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HDD}/applications/esphome:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 6052:6052
    restart: unless-stopped

  mqtt:
    image: eclipse-mosquitto:2.0
    restart: unless-stopped
    volumes:
      - "${HDD}/applications/mosquitto-data:/mosquitto"
    ports:
      - "1883:1883"
      - "9001:9001"
    command: "mosquitto -c /mosquitto-no-auth.conf"

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt
    container_name: zigbee2mqtt
    restart: unless-stopped
    volumes:
      - ${HDD}/applications/zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    ports:
      # Frontend port
      - 8081:8080
    environment:
      - TZ=${TZ}
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0

  syncthing:
    image: syncthing/syncthing
    container_name: syncthing
    hostname: home-syncthing
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${HDD}/applications/syncthing:/var/syncthing
    network_mode: host
    restart: unless-stopped
